#version 460
#include "glsl.h"

layout(local_size_x = COMP_X_DIM, local_size_y = COMP_Y_DIM, local_size_z = COMP_Z_DIM) in;

layout(set = 0, binding = COMP_OBJ_BIND) buffer VertCoordBuffer{
  vec2 arr[];
}coords;
layout(set = 1, binding = COMP_VEL_BIND) buffer VertAccBuffer{
  vec2 arr[];
}vels;
layout(push_constant) uniform Size{
  uint size;
  float del_time;
} push;

void main(){
  uint inx = gl_GlobalInvocationID.x;
  //return;
  float vec_fac = 1.0;
  if(inx < push.size){

    vec2 force = vec2(0,0);
    for(uint i = 0; i < push.size; ++i){
      if(i == inx)
	continue;
      const float min_len = 0.005;
      vec2 diff = coords.arr[i] - coords.arr[inx];
      float len = length(diff);
      if(len < min_len){
	vec_fac *= 0.99;
	len = min_len;
      }
      const float factor1 = 0.1;
      force = force + factor1 * diff / (len*len*len);
    }
    const float factor = 0.0001;

    force = force * factor * push.del_time;

    vels.arr[inx] *= 0.99;
    vels.arr[inx] = vels.arr[inx] + force;
    
  }
}
